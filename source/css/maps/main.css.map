{"version":3,"sources":["main.scss","general/_layout.scss","general/_colors.scss","../_patterns/atoms/header/top-bar-link.scss","general/_variables.scss","../_patterns/molecules/content/quote.scss","../_patterns/molecules/header/top-bar-linklist-left.scss","../_patterns/molecules/headlines/headline-icon-with-link.scss","../_patterns/molecules/headlines/headline-icon.scss","_sprite.scss","../_patterns/organisms/content/content-container.scss","../_patterns/organisms/content/link-block.scss","../_patterns/organisms/content/special-container.scss","../_patterns/organisms/header/top-bar.scss"],"names":[],"mappings":"AAAA,cAAc;AAKd,yBAAyB;ACLzB;EACI,0BCD2B,EDE9B;;ADMD,aAAa;AAGb,cAAc;AGXd;EACI,aCDiB;EDEjB,eDEwB;ECDxB,kBCHiB,EDIpB;;AEJD;EACI,oBAAmB;EACnB,oBDA0B,ECC7B;;AAED;EACI,mBAAkB;EAClB,kBAAiB,EACpB;;AAED;EACI,eAAc,EACjB;;ACZD;EACI,sBAAqB;EACrB,UAAS;EACT,WAAU;EACV,aFJiB;EEKjB,YAAW,EACd;;AAED;EACI,aFTiB;EEUjB,sBAAqB;EACrB,YAAW;EACX,kBAAiB,EACpB;;ACbD;EACI,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,0BAA8B;MAA9B,uBAA8B;UAA9B,+BAA8B;EAC9B,sBAAiB;MAAjB,kBAAiB,EACpB;;ACJD;EACI,oBAAmB;EACnB,mBAAkB;EAClB,+BAA8B;EAC9B,oBJC8B;EIA9B,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,0BAA8B;MAA9B,uBAA8B;UAA9B,+BAA8B;EAC9B,sBAAiB;MAAjB,kBAAiB;EACjB,mBAAkB,EACrB;;AAED;EACI,YAAW,EACd;;AAED;EACI,oBAAmB,EACtB;;AAED;EAEQ,mBAAkB;EAClB,OAAM;EACN,QAAO;EACP,WAAU;EACV,eAAc;EACd,aAAY;ECgElB,iDAAuB;EALvB,gCA1C2B;EAgC3B,aAhCkC;EAoClC,cApCyC;EDbnC,YAAW;EACX,WAAU,EACb;;AEhCL;EAEQ,2BAA0B,EAC7B;;ACHL;EACI,oBPC0B,EOA7B;;AAED;EACI,sBAAqB;EACrB,UAAS;EACT,WAAU,EACb;;AAED;EAIQ,eAAc,EACjB;;AAGL;EAEQ,qBAAoB,EACvB;;AAGL;EAEQ,uBAAsB,EACzB;;AC3BL;EACI,cAAa;EACb,mBAAkB,EAKrB;EAPD;IAKQ,2BAA0B,EAC7B;;ACNL;EACI,aTDiB;ESEjB,uBAAsB,EACzB","file":"../main.css","sourcesContent":["/* Settings */\n@import 'general/colors';\n@import 'general/variables';\n@import 'general/typography';\n\n/* General definitions */\n@import 'general/layout';\n\n/* Sprites */\n@import 'sprite';\n\n/* Patterns */\n@import 'import_pattern';\n","body {\n    background-color: $color-background-body;\n}","$color-background-body: #e8e8e8;\n\n$color-text-default: #000000;\n\n$color-top-bar-link: #ff0000;\n\n",".top-bar__link {\n    height: $top-bar-height;\n    color: $color-top-bar-link;\n    line-height: $top-bar-height;\n}\n","$top-bar-height: 50px;\n\n$paragraph-spacer-bottom: 40px;\n$paragraph-spacer-text-bottom: 20px;\n\n$headline-icon-spacer-bottom: 15px;",".c-quote {\n    padding-left: 100px;\n    margin-bottom: $paragraph-spacer-bottom;\n}\n\n.c-quote__text {\n    font-style: italic;\n    font-weight: bold;\n}\n\n.c-quote__caption {\n    font-size: 9px;\n}\n",".top-bar__linklist-left {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    height: $top-bar-height;\n    float: left;\n}\n\n.top-bar__link-item {\n    height: $top-bar-height;\n    display: inline-block;\n    float: left;\n    border-right: 1px;\n}\n",".c-headline-icon--with-link {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n}\n",".c-headline-icon {\n    padding-bottom: 4px;\n    padding-left: 40px;\n    border-bottom: 1px solid black;\n    margin-bottom: $headline-icon-spacer-bottom;\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    position: relative;\n}\n\n.c-headline-icon__label {\n    color: grey;\n}\n\n.c-headline-icon__link {\n    white-space: nowrap;\n}\n\n.c-headline-icon--icon1 {\n    &:before {\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        display: block;\n        content: ' ';\n\n        @include sprite($up);\n\n        scale: 0.25;\n        zoom: 0.25;\n    }\n}\n","// SCSS variables are information about icon's compiled state, stored under its original file name\n//\n// .icon-home {\n//   width: $icon-home-width;\n// }\n//\n// The large array-like variables contain all information about a single icon\n// $icon-home: x y offset_x offset_y width height total_width total_height image_path;\n//\n// At the bottom of this section, we provide information about the spritesheet itself\n// $spritesheet: width height image $spritesheet-sprites;\n$down-name: 'down';\n$down-x: 0px;\n$down-y: 0px;\n$down-offset-x: 0px;\n$down-offset-y: 0px;\n$down-width: 128px;\n$down-height: 128px;\n$down-total-width: 256px;\n$down-total-height: 256px;\n$down-image: 'images/sprites/sprite.png';\n$down: (0px, 0px, 0px, 0px, 128px, 128px, 256px, 256px, 'images/sprites/sprite.png', 'down', );\n$right-name: 'right';\n$right-x: 128px;\n$right-y: 0px;\n$right-offset-x: -128px;\n$right-offset-y: 0px;\n$right-width: 128px;\n$right-height: 128px;\n$right-total-width: 256px;\n$right-total-height: 256px;\n$right-image: 'images/sprites/sprite.png';\n$right: (128px, 0px, -128px, 0px, 128px, 128px, 256px, 256px, 'images/sprites/sprite.png', 'right', );\n$up-name: 'up';\n$up-x: 0px;\n$up-y: 128px;\n$up-offset-x: 0px;\n$up-offset-y: -128px;\n$up-width: 128px;\n$up-height: 128px;\n$up-total-width: 256px;\n$up-total-height: 256px;\n$up-image: 'images/sprites/sprite.png';\n$up: (0px, 128px, 0px, -128px, 128px, 128px, 256px, 256px, 'images/sprites/sprite.png', 'up', );\n$spritesheet-width: 256px;\n$spritesheet-height: 256px;\n$spritesheet-image: 'images/sprites/sprite.png';\n$spritesheet-sprites: ($down, $right, $up, );\n$spritesheet: (256px, 256px, 'images/sprites/sprite.png', $spritesheet-sprites, );\n\n// The provided mixins are intended to be used with the array-like variables\n//\n// .icon-home {\n//   @include sprite-width($icon-home);\n// }\n//\n// .icon-email {\n//   @include sprite($icon-email);\n// }\n//\n// Example usage in HTML:\n//\n// `display: block` sprite:\n// <div class=\"icon-home\"></div>\n//\n// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n//\n// // CSS\n// .icon {\n//   display: inline-block;\n// }\n//\n// // HTML\n// <i class=\"icon icon-home\"></i>\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n// The `sprites` mixin generates identical output to the CSS template\n//   but can be overridden inside of SCSS\n//\n// @include sprites($spritesheet-sprites);\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n",".c-content-container {\n    h3 {\n        text-decoration: underline;\n    }\n}\n",".c-link-block {\n    margin-bottom: $paragraph-spacer-bottom;\n}\n\n.c-link-block__link-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n}\n\n.c-link-block__link {\n    //color: red;\n\n    &:before {\n        color: inherit;\n    }\n}\n\n.c-link-block__link--intern {\n    &:before {\n        content: '[intern] ';\n    }\n}\n\n.c-link-block__link--download {\n    &:before {\n        content: '[download] ';\n    }\n}\n",".c-special-container {\n    padding: 20px;\n    margin-bottom: 8px;\n\n    h4 {\n        text-decoration: underline;\n    }\n}\n",".top-bar {\n    height: $top-bar-height;\n    background-color: grey;\n}\n"]}